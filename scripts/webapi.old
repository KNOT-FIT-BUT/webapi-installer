#!/bin/bash
# webapiner daemon
# description: webapi daemon
# processname: webapiner

DAEMON_PATH="/mnt/minerva1/nlp/projects/webapiner/"

NAME=webapiner
DESC="Webapiner init.d script."
PIDFILE=$DAEMON_PATH"src/"$NAME.pid
SCRIPTNAME="/mnt/minerva1/nlp/projects/webapiner/"$NAME
PWD=`pwd`


case "$1" in
start)
	printf "%-50s" "Starting $NAME..."
	cd $DAEMON_PATH"src/"
	screen -dmS $NAME sh run.sh
	for n in {1..10}
	do
	    if [ -f $PIDFILE ]; then
        	break
        else
            sleep 1
		fi
	done
    PID=$(cat $PIDFILE)
    if [ -z $PID ]; then
        printf "%s\n" "Failed!"
    else
        printf "%s\n" "Done!"
    fi
    cd $PWD
;;
status)
        printf "%-50s" "Checking $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ ! -d "/proc/"$PID ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running."
        fi
;;
stop)
        printf "%-50s" "Stopping $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            kill -SIGINT $PID
            for n in {1..10}
			do
			    if [ -d "/proc/"$PID ]; then
                	sleep 1
	            else
	                break
	            fi
			done
			if [ -d "/proc/"$PID ]; then
                	printf "%s\n" "Failed!"
                	printf "%s %s\n" "Try manual kill process with PID: " $PID
	        else
	                printf "%s\n" "Done!"
                        rm -f $PIDFILE

	        fi
        else
            printf "%s\n" "pidfile not found"
        fi
	SHKBD=`ps aux | grep 'SharedKB' | grep -v "grep" | awk '{print $2}'`
        if [ ! -z $SHKBD ]; then
        	printf "%-50s" "Killing SharedKB-daemon..."
        	kill -9 $SHKBD
        	if [ $? -eq 0 ]; then
			    printf "%s\n" "Done!"
			else
			    printf "%s\n" "FAILED!"
			    printf "%s\n" "**************************************************************"
			    printf "%s\n" "YOU MUST MANUALY KILL KBSHARED-DAEMON PROCESS BEFORE UPDATE!!!"
			    printf "%s\n" "**************************************************************"
			fi
        fi
;;

restart)
  	$0 stop
  	$0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac 
